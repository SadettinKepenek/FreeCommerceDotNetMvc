
@{
    ViewBag.Title = "UpdateCategory";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
@using FreeCommerceDotNet.DAL.Concrete
@model FreeCommerceDotNet.Entities.Concrete.Category
@using Category=FreeCommerceDotNet.Entities.Concrete.Category
@{
    List<Category> categories;
    using (FreeCommerceDotNet.BLL.Concrete.CategoryManager bm = new FreeCommerceDotNet.BLL.Concrete.CategoryManager(new CategoryRepository()))
    {
        categories = bm.SelectAll();
        categories.Insert(0, new Category() { CategoryId = -1, CategoryName = "Parent Category Yok", ParentId = -1 });
        var element = categories.FirstOrDefault(x => x.CategoryId == Model.CategoryId);
        categories.Remove(element);
    }
}

<div class="container-fluid">
    <div class="page-header">
        <div class="row">
            <div class="col-lg-6">
                <div class="page-header-left">
                    <h3>
                        Update Category
                        <small>FreeCommerce Admin panel</small>
                    </h3>

                </div>
            </div>
            <div class="col-lg-6">
                <ol class="breadcrumb pull-right">
                    <li class="breadcrumb-item"><a href="index.html"><i data-feather="home"></i></a></li>
                    <li class="breadcrumb-item active">Update Category</li>

                </ol>
            </div>
        </div>
    </div>
</div>
<div class="container-fluid">
    <div class="row product-adding">
        <div class="col-xl-8">
            <div class="card">
                <div class="card-header">
                    <h5> Update Category @Model.CategoryName</h5>
                </div>
                <div class="card-body">
                    <div class="digital-add needs-validation">
                        @using (Html.BeginForm("UpdateCategory", "Admin", FormMethod.Post, new { novalidate = "", @class = "needs-validation add-product-form" }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.HiddenFor(x => x.CategoryId)

                            <div class="form-group">
                                <label for="validationCustom01" class="col-form-label pt-0"><span>*</span>Category Name:</label>
                                @Html.TextBoxFor(x => x.CategoryName, new { @class = "form-control", id = "validationCustom01", type = "text", required = "required" })
                            </div>
                            <div class="form-group">
                                <label for="validationCustom02" class="col-form-label pt-0"><span>*</span>Parent Category(if not,empty):</label>
                                @Html.DropDownListFor(x => x.ParentId, new SelectList(categories, "CategoryId", "CategoryName"), new { @class = "form-control", id = "validationCustom02", type = "text", required = "" })
                            </div>
                            <div class="form-group">
                                <label for="validationCustom02" class="col-form-label pt-0"><span>*</span>Category Description:</label>
                                @Html.TextBoxFor(x => x.Description, new { @class = "form-control", id = "validationCustom03", type = "text", required = "" })
                            </div>
                            <div class="form-group">
                                <label for="validationCustom02" class="col-form-label pt-0"><span>*</span>Metatag Title:</label>
                                @Html.TextBoxFor(x => x.MetatagTitle, new { @class = "form-control", id = "validationCustom04", type = "text", required = "" })
                            </div>
                            <div class="form-group">
                                <label for="validationCustom02" class="col-form-label pt-0"><span>*</span>Metatag Description:</label>
                                @Html.TextBoxFor(x => x.MetatagDescription, new { @class = "form-control", id = "validationCustom05", type = "text", required = "" })
                            </div>
                            <div class="form-group">
                                <label for="validationCustom02" class="col-form-label pt-0"><span>*</span>Metatag Keywords:</label>
                                @Html.TextBoxFor(x => x.Metatagkeywords, new { @class = "form-control", id = "validationCustom06", type = "text", required = "" })
                            </div>
                            <div class="form-group">
                                <label for="validationCustom02" class="col-form-label pt-0"><span>*</span>Show Navbar?</label>
                                @Html.CheckBoxFor(x => x.ShowNavbar, new { @class = "form-control", style = "width:20px;", id = "validationCustom07" })
                                <hr />

                            </div>
                            <div class="offset-xl-3 offset-sm-4">
                                <button type="submit" class="btn btn-primary">Add</button>
                                @Html.ActionLink("Discard", "Categories", "Admin", null, new { type = "button", @class = "btn btn-light" })
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script src="../assets/js/jquery-3.3.1.min.js"></script>
<!-- Container-fluid Ends-->
<script src="../assets/js/dashboard/form-validation-custom.js"></script>