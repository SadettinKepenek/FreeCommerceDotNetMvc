
@{
    ViewBag.Title = "AddOrder";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}


@using FreeCommerceDotNet.DAL.Concrete
@using FreeCommerceDotNet.Models.DbManager
@using FreeCommerceDotNet.Models.DbModels
@model FreeCommerceDotNet.Entities.Concrete.OrderMaster
@using Customer = FreeCommerceDotNet.Entities.Concrete.Customer
@using Payment = FreeCommerceDotNet.Entities.Concrete.Payment
@using Product = FreeCommerceDotNet.Entities.Concrete.Product
@using Shipping = FreeCommerceDotNet.Entities.Concrete.Shipping
@{
    List<Product> products;
    List<Payment> payments;
    List<Shipping> shippings;
    List<Customer> customers;
    using (FreeCommerceDotNet.BLL.Concrete.ShippingManager m = new FreeCommerceDotNet.BLL.Concrete.ShippingManager(new ShippingRepository()))
    {
        shippings = m.SelectAll();
    }
    using (FreeCommerceDotNet.BLL.Concrete.PaymentGatewayManager m = new FreeCommerceDotNet.BLL.Concrete.PaymentGatewayManager(new PaymentGatewayRepository()))
    {
        payments = m.SelectAll();
    }
    using (FreeCommerceDotNet.BLL.Concrete.ProductManager m = new FreeCommerceDotNet.BLL.Concrete.ProductManager(new ProductRepository()))
    {
        products = m.SelectAll();
    }
    using (FreeCommerceDotNet.BLL.Concrete.CustomerManager m = new FreeCommerceDotNet.BLL.Concrete.CustomerManager(new CustomerRepositorycs()))
    {
        customers = m.SelectAll();
    }
}


<div class="container-fluid">
    <div class="page-header">
        <div class="row">
            <div class="col-lg-6">
                <div class="page-header-left">
                    <h3>
                        Add Order
                        <small>FreeCommerce Admin panel</small>
                    </h3>

                </div>
            </div>
            <div class="col-lg-6">
                <ol class="breadcrumb pull-right">
                    <li class="breadcrumb-item"><a href="index.html"><i data-feather="home"></i></a></li>
                    <li class="breadcrumb-item active">Add Order</li>

                </ol>
            </div>
        </div>
    </div>
</div>
<div class="container-fluid">
    <div class="row product-adding">
        <div class="col-xl-8">
            <div class="card">
                <div class="card-header">
                    <h5> Add Category</h5>
                    <h3>@TempData["OrderMasterMessage"]</h3>
                </div>
                <div class="card-body">
                    <div class="digital-add needs-validation">
                        @using (Html.BeginForm("AddOrder", "Admin", FormMethod.Post, new { novalidate = "", @class = "needs-validation add-product-form" }))
                        {
                            @Html.AntiForgeryToken()
                            @*@Html.HiddenFor(x => x.Category.CategoryId)*@


                            <div class="form-group">
                                <label for="validationCustom02" class="col-form-label pt-0"><span>*</span>Customer</label>
                                @Html.DropDownListFor(x => x.CustomerId, new SelectList(customers, "CustomerId", "Firstname"), new { @class = "form-control", id = "validationCustom02", type = "text", required = "" })
                            </div>
                            <div class="form-group">
                                <label for="validationCustom02" class="col-form-label pt-0"><span>*</span>Payment Gateway:</label>
                                @Html.DropDownListFor(x => x.PaymentGatewayId, new SelectList(payments, "PaymentId", "PaymentName"), new { @class = "form-control", id = "validationCustom02", type = "text", required = "" })
                            </div>
                            <div class="form-group">
                                <label for="validationCustom02" class="col-form-label pt-0"><span>*</span>Payment Gateway:</label>
                                @Html.DropDownListFor(x => x.ShippingId, new SelectList(shippings, "ShippingId", "ShippingName"), new { @class = "form-control", id = "validationCustom02", type = "text", required = "" })
                            </div>

                            <div class="form-group">
                                <label for="validationCustom02" class="col-form-label pt-0"><span>*</span>Track Number:</label>
                                @Html.TextBoxFor(x => x.TrackNumber, new { @class = "form-control", id = "validationCustom02", type = "text", required = "" })
                            </div>
                            <div class="form-group">
                                <label for="validationCustom02" class="col-form-label pt-0"><span>*</span>Oder Date:</label>
                                @Html.TextBoxFor(x => x.OrderDate, new { @class = "form-control", id = "validationCustom02", type = "text", required = "" })
                            </div>
                            <div class="form-group">
                                <label for="validationCustom02" class="col-form-label pt-0"><span>*</span>Delivery Date:</label>
                                @Html.TextBoxFor(x => x.OrderDate, new { @class = "form-control", id = "validationCustom02", type = "text", required = "" })
                            </div>

                            <div class="form-group">
                                <label for="validationCustom02" class="col-form-label pt-0"><span>*</span>Delivery date:</label>
                                @Html.TextBoxFor(x => x.DeliveryDate, new { @class = "form-control", id = "validationCustom02", type = "text", required = "" })
                            </div>

                            <div class="form-group">
                                <label for="validationCustom02" class="col-form-label pt-0"><span>*</span>Delivery Comment:</label>
                                @Html.TextBoxFor(x => x.DeliveryComment, new { @class = "form-control", id = "validationCustom02", type = "text", required = "" })
                            </div>

                            <div class="form-group">
                                <label for="validationCustom02" class="col-form-label pt-0"><span>*</span>Delivery Status:</label>
                                @Html.TextBoxFor(x => x.DeliveryStatus, new { @class = "form-control", id = "validationCustom02", type = "text", required = "" })
                            </div>
                            <div class="form-group">
                                <div class="table-responsive">
                                    <table class="table">
                                        <caption>Order Details</caption>
                                        <thead>
                                            <tr>
                                                <th scope="col">#Product</th>
                                                <th scope="col">Quantity</th>
                                                <th scope="col" class="pull-right"><button type="button" class="btn btn-sm btn-primary" onclick="addNewProduct()">Add New Product</button></th>
                                            </tr>
                                        </thead>
                                        <tbody id="tableOrderDetailsProduct">
                                            @for (int i = 0; i < Model.OrderDetails.Count; i++)
                                            {
                                                @*<tr>
                                                        <th scope="row">
                                                            @Html.DropDownListFor(x => x.OrderDetails[i].ProductId, new SelectList(products, "ProductId", "ProductName"), new { @class = "form-control", id = "validationCustom02", required = "" })
                                                        </th>
                                                        <td colspan="2">@Html.TextBoxFor(x => x.OrderDetails[i].Quantity, new { @class = "form-control", id = "validationCustom02", type = "number", required = "" })</td>

                                                    </tr>*@
                                            }



                                        </tbody>
                                    </table>
                                </div>
                            </div>
                            <div class="offset-xl-3 offset-sm-4">
                                <button type="submit" class="btn btn-primary">Add</button>
                                @Html.ActionLink("Discard", "Orders", "Admin", null, new { type = "button", @class = "btn btn-light" })
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    var productCount = 0;
    function deleteProduct(count) {
        console.log("How Many");
        var tr = $('#productRow' + count);
        tr.remove();
        window.productCount--;
    }
    function addNewProduct() {
        var tbody = $('#tableOrderDetailsProduct');
        var htmlString = '<tr id="productRow'+window.productCount+'"><th scope="row">' +
            @Html.Raw(Json.Encode(@Html.DropDownListFor(x => x.OrderDetails[0].ProductId, new SelectList(products, "ProductId", "ProductName"), new { @class = "form-control", id = "validationCustom02", required = "" }).ToHtmlString())) +
            '</th><td colspan="2">' +
            @Html.Raw(Json.Encode(Html.TextBoxFor(x => x.OrderDetails[0].Quantity, new { @class = "form-control", id = "validationCustom02", type = "number", required = "" }).ToHtmlString())) +
            '</td>' +
            '<td><button type="button" id="deleteProduct' + window.productCount + '" class="btn btn-xs btn-primary" onclick="deleteProduct(window.productCount)">X</button></td></tr><input type="hidden" name="OrderDetails.Index" value="' + window.productCount + '">';
        htmlString =
            htmlString.replace("OrderDetails[0].ProductId", "OrderDetails[" + window.productCount + "].ProductId");
        htmlString =
            htmlString.replace("OrderDetails[0].Quantity", "OrderDetails[" + window.productCount + "].Quantity");
        window.productCount++;
        console.log(htmlString);
        tbody.append(htmlString);
    }
</script>
<script src="../assets/js/jquery-3.3.1.min.js"></script>
<!-- Container-fluid Ends-->
<script src="../assets/js/dashboard/form-validation-custom.js"></script>