@using System.ComponentModel
@using System.Diagnostics

@using System.Collections.Generic
@using System.Web
@using System.Web.Mvc
@using FreeCommerceDotNet.BLL.Concrete
@using FreeCommerceDotNet.DAL.Concrete
@using FreeCommerceDotNet.Entities.Concrete
@using Attribute = FreeCommerceDotNet.Entities.Concrete.Attribute

@model FreeCommerceDotNet.Entities.Concrete.Product




@helper SetHiddenAttributeFieldInstance(int count, List<Attribute> attributes)
{
    <div class="row" id="hiddenAttributeField">
        <div class="col-md-4" id="hiddenAttributeFieldDropDown">
            @(Html.DropDownListFor(x => x.ProductAttributes[count].AttributeId, new SelectList(attributes, "AttributeId", "AttributeName"), new { @class = "form-control", type = "input" }))
        </div>
        <div class="col-md-8">
            <textarea placeholder="Attribute Description" class="form-control" style="min-width: 100%; min-height: 90%"></textarea>
        </div>
    </div>

}


@{
    List<Category> categories;
    List<FreeCommerceDotNet.Entities.Concrete.Attribute> attributes;
    List<Segment> segments;
    using (CategoryManager bm = new CategoryManager(new CategoryRepository()))
    {
        categories = bm.SelectAll();

    }
    using (AttributeManager bm = new AttributeManager(new AttributeRepository()))
    {
        attributes = bm.SelectAll();

    }
    using (SegmentManager bm = new SegmentManager(new SegmentRepository()))
    {
        segments = bm.SelectAll();
    }
    int count = 0;

}

@{
    ViewBag.Title = "AddProduct";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}



@functions{

    public void incrementAttributeCount()
    {

    }
    // TODO Bütün her şey tamam post işlemi yapılacak.

}





<!-- Container-fluid starts-->
<div class="container-fluid">
    <div class="page-header">
        <div class="row">
            <div class="col-lg-6">
                <div class="page-header-left">
                    <h3>
                        Add Products
                        <small>FreeCommerce Admin panel</small>
                    </h3>
                </div>
            </div>
            <div class="col-lg-6">
                <ol class="breadcrumb pull-right">
                    <li class="breadcrumb-item"><a href="index.html"><i data-feather="home"></i></a></li>
                    <li class="breadcrumb-item active">Add Product</li>
                </ol>
            </div>
        </div>
    </div>
</div>
<!-- Container-fluid Ends-->
<!-- Container-fluid starts-->
<div class="container-fluid">
    <div class="row">
        <div class="col-sm-12">
            <div class="card">
                <div class="card-header">
                    <h5>Add Product</h5>
                </div>
                <div class="card-body">
                    <div class="row product-adding">
                        <div class="col-xl-12">

                            <div class="form">
                                @using (Html.BeginForm("AddProduct", "Admin", FormMethod.Post, new { novalidate = "", @class = "needs-validation add-product-form" }))
                                {


                                    <div class="form-group mb-3 row">
                                        <label for="validationCustom01" class="col-xl-3 col-sm-4 mb-0">Product Name :</label>
                                        @Html.TextBoxFor(x => x.ProductName, new { @class = "form-control col-xl-8 col-sm-7", id = "validationCustom01", type = "text", required = "" })
                                        <div class="valid-feedback">Looks good!</div>
                                        <div class="invalid-feedback offset-sm-4 offset-xl-3">Please Enter Valid Product Name.</div>
                                    </div>
                                    <div class="form-group mb-3 row">
                                        <label for="editor1" class="col-xl-3 col-sm-4 mb-0">Product Description :</label>
                                        <div class="col-xl-8 col-sm-7 pl-0 description-sm">
                                            @Html.TextAreaFor(x => x.ProductDescription, new { @class = "form-control col-xl-8 col-sm-7 description-sm",  name = "editor1", type = "text", required = "" })
                                        </div>
                                        <div class="valid-feedback">Looks good!</div>
                                        <div class="invalid-feedback offset-sm-4 offset-xl-3">Please Enter Valid Product Name.</div>
                                    </div>

                                    <div class="form-group mb-3 row">
                                        <label for="validationCustom02" class="col-xl-3 col-sm-4 mb-0">Category :</label>
                                        @Html.DropDownListFor(x => x.CategoryId, new SelectList(categories, "CategoryId", "CategoryName"), new { @class = "form-control col-xl-8 col-sm-7", id = "validationCustom02", type = "input", required = "" })
                                        <div class="valid-feedback">Looks good!</div>
                                        <div class="invalid-feedback offset-sm-4 offset-xl-3">Please Enter Valid Category Name.</div>
                                    </div>
                                    <div class="form-group mb-3 row">
                                        <label for="validationCustom07" class="col-xl-3 col-sm-4 mb-0">Quantity :</label>
                                        @Html.TextBoxFor(x => x.Quantity, new { @class = "form-control col-xl-8 col-sm-7", id = "validationCustom07", type = "number", required = "" })
                                        <div class="valid-feedback">Looks good!</div>
                                        <div class="invalid-feedback offset-sm-4 offset-xl-3">Please Enter Valid Quantity.</div>
                                    </div>
                                    <div class="form-group mb-3 row">
                                        <label for="validationCustom03" class="col-xl-3 col-sm-4 mb-0">Metatag Title :</label>
                                        @Html.TextBoxFor(x => x.MetatagTitle, new { @class = "form-control col-xl-8 col-sm-7", id = "validationCustom03", type = "text", required = "" })
                                        <div class="valid-feedback">Looks good!</div>
                                        <div class="invalid-feedback offset-sm-4 offset-xl-3">Please Enter Valid Title.</div>
                                    </div>
                                    <div class="form-group mb-3 row">
                                        <label for="validationCustom04" class="col-xl-3 col-sm-4 mb-0">Metatag Description :</label>
                                        @Html.TextAreaFor(x => x.MetatagDescription, new { @class = "form-control col-xl-8 col-sm-7", id = "validationCustom04", type = "text", required = "" })
                                        <div class="valid-feedback">Looks good!</div>
                                        <div class="invalid-feedback offset-sm-4 offset-xl-3">Please Enter Valid Description.</div>
                                    </div>
                                    <div class="form-group mb-3 row">
                                        <label for="validationCustom05" class="col-xl-3 col-sm-4 mb-0">Metatag Keywords(Comma-Seperated) :</label>
                                        @Html.TextBoxFor(x => x.MetatagKeywords, new { @class = "form-control col-xl-8 col-sm-7", id = "validationCustom05", type = "text", required = "" })
                                        <div class="valid-feedback">Looks good!</div>
                                        <div class="invalid-feedback offset-sm-4 offset-xl-3">Please Enter Valid Keywords.</div>
                                    </div>

                                    <hr />
                                    <ul class="nav nav-tabs" id="myTab" role="tablist">
                                        <li class="nav-item">
                                            <a class="nav-link active" id="home-tab" data-toggle="tab" href="#product-settings-tab" role="tab" aria-controls="home" aria-selected="true">Product Settings</a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link" id="settings-nav-tab" data-toggle="tab" href="#product-codes-tab" role="tab" aria-controls="product-codes" aria-selected="false">Product Codes</a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link" id="general-settings-nav-tab" data-toggle="tab" href="#product-specific-tab" role="tab" aria-controls="product-specific-settings" aria-selected="false">General Settings</a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link" id="general-options-nav-tab" data-toggle="tab" href="#product-options-tab" role="tab" aria-controls="product-options-settings" aria-selected="false">Product Options</a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link" id="general-attributes-nav-tab" data-toggle="tab" href="#product-attributes-tab" role="tab" aria-controls="product-attributes-settings" aria-selected="false">Product Attributes</a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link" id="general-prices-nav-tab" data-toggle="tab" href="#product-prices-tab" role="tab" aria-controls="product-prices-settings" aria-selected="false">Product Prices</a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link" id="general-images-nav-tab" data-toggle="tab" href="#product-images-tab" role="tab" aria-controls="product-images-settings" aria-selected="false">Product Images</a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link" id="discount-nav-tab" data-toggle="tab" href="#product-discount-tab" role="tab" aria-controls="product-discount-settings" aria-selected="false">Product Discount</a>
                                        </li>
                                    </ul>
                                    <div class="tab-content" id="myTabContent">
                                        <div class="tab-pane fade show active" id="product-settings-tab" role="tabpanel" aria-labelledby="home-tab">
                                            <br />
                                            <div class="form-group mb-3 row">
                                                <label for="validationCustom06" class="col-xl-3 col-sm-4 mb-0">Product Tags(Comma-Seperated) :</label>
                                                @Html.TextBoxFor(x => x.ProductTags, new { @class = "form-control col-xl-8 col-sm-7", id = "validationCustom06", type = "text", required = "" })
                                                <div class="valid-feedback">Looks good!</div>
                                                <div class="invalid-feedback offset-sm-4 offset-xl-3">Please Enter Valid Keywords.</div>
                                            </div>
                                            <div class="form-group mb-3 row">
                                                <label for="validationCustom07" class="col-xl-3 col-sm-4 mb-0">Product Code :</label>
                                                @Html.TextBoxFor(x => x.ProductCode, new { @class = "form-control col-xl-8 col-sm-7", id = "validationCustom07", type = "text", required = "" })
                                                <div class="valid-feedback">Looks good!</div>
                                                <div class="invalid-feedback offset-sm-4 offset-xl-3">Please Enter Valid Product Code.</div>
                                            </div>
                                        </div>
                                        <div class="tab-pane fade" id="product-codes-tab" role="tabpanel" aria-labelledby="home-tab">
                                            <br />
                                            <div class="form-group mb-3 row">
                                                <label for="validationCustom06" class="col-xl-3 col-sm-4 mb-0">SKU :</label>
                                                @Html.TextBoxFor(x => x.SKU, new { @class = "form-control col-xl-8 col-sm-7", id = "validationCustom06", type = "text" })
                                            </div>
                                            <div class="form-group mb-3 row">
                                                <label for="validationCustom06" class="col-xl-3 col-sm-4 mb-0">UPC :</label>
                                                @Html.TextBoxFor(x => x.UPC, new { @class = "form-control col-xl-8 col-sm-7", id = "validationCustom06", type = "text" })
                                            </div>
                                            <div class="form-group mb-3 row">
                                                <label for="validationCustom06" class="col-xl-3 col-sm-4 mb-0">EAN :</label>
                                                @Html.TextBoxFor(x => x.EAN, new { @class = "form-control col-xl-8 col-sm-7", id = "validationCustom06", type = "text" })
                                            </div>
                                            <div class="form-group mb-3 row">
                                                <label for="validationCustom06" class="col-xl-3 col-sm-4 mb-0">JAN :</label>
                                                @Html.TextBoxFor(x => x.JAN, new { @class = "form-control col-xl-8 col-sm-7", id = "validationCustom06", type = "text" })
                                            </div>
                                            <div class="form-group mb-3 row">
                                                <label for="validationCustom06" class="col-xl-3 col-sm-4 mb-0">MPN :</label>
                                                @Html.TextBoxFor(x => x.MPN, new { @class = "form-control col-xl-8 col-sm-7", id = "validationCustom06", type = "text" })
                                            </div>
                                        </div>
                                        <div class="tab-pane fade" id="product-specific-tab" role="tabpanel" aria-labelledby="home-tab">
                                            <br />
                                            <div class="form-group mb-3 row">
                                                <label for="validationCustom08" class="col-xl-3 col-sm-4 mb-0">Out of stock text :</label>
                                                @Html.TextBoxFor(x => x.OutofStockStatus, new { @class = "form-control col-xl-8 col-sm-7", id = "validationCustom08", type = "text", required = "" })
                                            </div>
                                            <div class="form-group mb-3 row">
                                                <label for="validationCustom08" class="col-xl-3 col-sm-4 mb-0">Brand :</label>
                                                @Html.TextBoxFor(x => x.Brand, new { @class = "form-control col-xl-8 col-sm-7", id = "validationCustom08", type = "text", required = "" })
                                            </div>
                                            <div class="form-group mb-3 row">
                                                <label for="validationCustom08" class="col-xl-3 col-sm-4 mb-0">Available Date :</label>
                                                @Html.TextBoxFor(x => x.AvailableDate, new { @class = "form-control col-xl-8 col-sm-7", id = "validationCustom09", type = "date", required = "" })
                                            </div>
                                            <div class="form-group mb-3 row">
                                                <label for="validationCustom08" class="col-xl-3 col-sm-4 mb-0">Length :</label>
                                                @Html.TextBoxFor(x => x.Length, new { @class = "form-control col-xl-8 col-sm-7", id = "validationCustom09", type = "number" })
                                            </div>
                                            <div class="form-group mb-3 row">
                                                <label for="validationCustom08" class="col-xl-3 col-sm-4 mb-0">Width :</label>
                                                @Html.TextBoxFor(x => x.Width, new { @class = "form-control col-xl-8 col-sm-7", id = "validationCustom09", type = "number" })
                                            </div>
                                            <div class="form-group mb-3 row">
                                                <label for="validationCustom08" class="col-xl-3 col-sm-4 mb-0">Height :</label>
                                                @Html.TextBoxFor(x => x.Height, new { @class = "form-control col-xl-8 col-sm-7", id = "validationCustom09", type = "number" })
                                            </div>
                                        </div>
                                        <div class="tab-pane fade" id="product-options-tab" role="tabpanel" aria-labelledby="home-tab">
                                            <br />
                                            <div class="row">
                                                <div class="col-md-3">
                                                    Options
                                                </div>
                                                <div class="col-md-9">
                                                    Options
                                                </div>
                                            </div>
                                        </div>
                                        <div class="tab-pane fade" id="product-attributes-tab" role="tabpanel" aria-labelledby="home-tab">
                                            <br />
                                            <div class="container" id="attributes-panel-tab">

                                            </div>
                                            <div class="row">
                                                <div class="col-md-12">
                                                    <hr />
                                                    <button class="btn btn-xs btn-warning pull-right" type="button" onclick="addNewAttributeField();">Add New Attribute</button>

                                                </div>
                                            </div>
                                        </div>
                                        <div class="tab-pane fade" id="product-prices-tab" role="tabpanel" aria-labelledby="home-tab">
                                            <br />

                                            <div class="row">
                                                <div class="col-md-12">

                                                    <table class="table">
                                                        <thead>
                                                        <tr>
                                                            <th scope="col">#Segment</th>
                                                            <th scope="col">Fiyat</th>

                                                        </tr>
                                                        </thead>
                                                        <tbody>
                                                            @for (int i = 0; i < Model.ProductPrices.Count; i++)
                                                            {
                                                                <tr>
                                                                    <th scope="row">@Model.ProductPrices[i].Segment</th>
                                                                    <th scope="row">@Html.TextBoxFor(x => x.ProductPrices[i].Price, new { type = "number", style = "min-width:60%;" })</th>
                                                                </tr>
                                                            }





                                                        </tbody>
                                                    </table>

                                                    <hr />

                                                </div>
                                            </div>
                                        </div>
                                        <div class="tab-pane fade" id="product-images-tab" role="tabpanel" aria-labelledby="home-tab">
                                            <br />

                                            <div class="add-product">
                                                <div class="row text-center">

                                                    <div class="col-xl-9 xl-50 col-sm-6 col-9" id="imagesContainer">
                                                        @*<img src="" alt="" id="preview-image" class="img-fluid image_zoom_1 blur-up lazyloaded">*@
                                                    </div>
                                                    <div class="col-xl-3 xl-50 col-sm-6 col-3">
                                                        <ul class="file-upload-product">
                                                            <li>
                                                                <div class="box-input-file"><input class="upload" id="imageUploadInput1" type="file" onchange="readURL(this);"><i class="fa fa-plus"></i></div>
                                                            </li>
                                                            <li>
                                                                <div class="box-input-file"><input class="upload" id="imageUploadInput2" type="file" onchange="readURL(this);"><i class="fa fa-plus"></i></div>
                                                            </li>
                                                            <li>
                                                                <div class="box-input-file"><input class="upload" id="imageUploadInput3" type="file" onchange="readURL(this);"><i class="fa fa-plus"></i></div>
                                                            </li>
                                                            <li>
                                                                <div class="box-input-file"><input class="upload" type="file" onchange="readURL(this);"><i class="fa fa-plus"></i></div>
                                                            </li>
                                                            <li>
                                                                <div class="box-input-file"><input class="upload" type="file" onchange="readURL(this);"><i class="fa fa-plus"></i></div>
                                                            </li>
                                                            <li>
                                                                <div class="box-input-file"><input class="upload" type="file" onchange="readURL(this);"><i class="fa fa-plus"></i></div>
                                                            </li>
                                                        </ul>
                                                    </div>
                                                </div>

                                            </div>
                                            <hr />

                                        </div>
                                        <div class="tab-pane fade" id="product-discount-tab" role="tabpanel" aria-labelledby="home-tab">
                                            <div class="container-fluid text-center">
                                                @for (var i = 0; i < Model.ProductDiscounts.Count; i++)
                                                {
                                                    <div class="row text-center">
                                                        <div class="form-group">
                                                            <label class="form-control">Segment</label>
                                                            <label class="form-control text-center"> @Model.ProductDiscounts[i].SegmentId</label>

                                                            @*@Html.LabelFor(x => x.ProductDiscounts[i].Segment, new { @class = "form-control text-center" })*@
                                                        </div>
                                                        <div class="form-group">
                                                            <label class="form-control">Başlangıç Tarihi</label>
                                                            @Html.TextBoxFor(x => x.ProductDiscounts[i].StartDate, new { @class = "form-control text-center", type = "date" })
                                                        </div>
                                                        <div class="form-group">
                                                            <label class="form-control">Bitiş Tarihi</label>
                                                            @Html.TextBoxFor(x => x.ProductDiscounts[i].EndDate, new { @class = "form-control text-center", type = "date" })
                                                        </div>
                                                        <div class="form-group">
                                                            <label class="form-control">Yeni Fiyat</label>
                                                            @Html.TextBoxFor(x => x.ProductDiscounts[i].NewPrice, new { @class = "form-control text-center", type = "number" })
                                                        </div>
                                                        <div class="form-group">
                                                            <label class="form-control">Adet</label>
                                                            @Html.TextBoxFor(x => x.ProductDiscounts[i].Quantity, new { @class = "form-control text-center", type = "number" })
                                                        </div>



                                                    </div>
                                                }
                                            </div>

                                        </div>

                                    </div>
                                    <div class="offset-xl-3 offset-sm-4">
                                        <button type="submit" class="btn btn-primary">Add</button>
                                        <button type="button" class="btn btn-light">Discard</button>
                                    </div>
                                }
                             
                            </div>

                        </div>



                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    var clickedImageDeleteButton = 0;
    window.imageCount = 0;

    function RemoveSessionImageValue(key) {
        $(function () {
            $.post('../Session/RemoveVariable',
                { key: key }, function (data) {
                });
        });
    }
    function GetSessionImageValue(key)
    {
        $(function () {
            $.post('../Session/GetVariable',
                { key: key }, function (data) {
                    console.log(data.success);
                });
        });
    }
    function SetSessionImageValue(key, value) {
        $(function () {
            $.post('../Session/SetVariable',
                { key: key, value: value}, function (data)
                {
                    GetSessionImageValue(key);

                });
        });
    }

    function removeImageById(item) {
        var id = $(item).attr("id").replace("removeImageItem", "");
        console.log("Dosyayı sıfırla" + "#imageUploadInput" + id + "");
        $('#imageUploadInput'+ id ).val('');
        var element = $('#ImageRow' + id + '');
        element.remove();
        window.imageCount--;
        RemoveSessionImageValue('#Image' + id);
        if (window.imageCount == 0) {
            $('#imagesContainer').append('<a id=\"noImageCountText\">Şuan da hiç resim bulunmamaktadır.</a>');
        }
    }

    function imageIsLoaded(e) {

        SetSessionImageValue("Image" + window.imageCount, e.target.result);
        window.imageCount++;
        if (window.imageCount != 0) {
            $('#noImageCountText').remove();
        }
        if ($('#ImageRow' + window.imageCount + '').length) {
            var yeniResim = '<div class=\"row\" id=\"ImageRow' +
                window.imageCount +
                '\"><div class=\"col-md-10\"><img src="' +
                e.target.result +
                '" alt=""  class="img-fluid image_zoom_1 blur-up lazyloaded"></div><hr/><div class=\"col-md-2\"><button type=\"button\" class=\"btn btn-xs btn-danger\" id=\"removeImageItem' +
                window.imageCount +
                '\" onclick=\"removeImageById(this);\">Delete</button></div></div>';
            $('#ImageRow' + window.imageCount + '').replaceWith(yeniResim);

            console.log("Zaten image var" + window.imageCount);
        } else {
            $('#imagesContainer').append('<div class=\"row\" id=\"ImageRow' + window.imageCount + '\"><div class=\"col-md-10\"><img src="' + e.target.result + '" alt=""  class="img-fluid image_zoom_1 blur-up lazyloaded"></div><hr/><div class=\"col-md-2\"><button type=\"button\" class=\"btn btn-xs btn-danger\" id=\"removeImageItem' + window.imageCount +'\" onclick=\"removeImageById(this);\">Delete</button></div></div>');

        }
    }

    function readURL(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();

            reader.onload = imageIsLoaded;
            reader.onerror = function(event) {
                console.log("Error during uploading image");
            };
            console.log(window.imageCount);
            reader.readAsDataURL(input.files[0]);

        }
    }

    var count = 0;
    window.count = 0;
    function setAttributeCountValue() {
        window.count=window.count+1;
    }
    function getAttributeCountValue() {
        return window.count;
    }
    function addNewAttributeField() {
        var attributeRow = $("#attributes-panel-tab");
        var htmlString =
            '<div class=\"row\" id=\"attribute-row-' + window.count + '\" ><div class=\"col-md-4\">' + @Html.Raw(Json.Encode(Html.DropDownListFor(x => x.ProductAttributes[count].AttributeId, new SelectList(attributes, "AttributeId", "AttributeName"), new { @class = "form-control", type = "input"}).ToHtmlString()))+'</div><div class=\"col-md-8\" >' +@Html.Raw(Json.Encode(Html.TextAreaFor(x=>x.ProductAttributes[count].AttributeDescription,new {@class="form-control",style= "min-width: 100%; min-height:90 %" }).ToHtmlString()))+'<br/><button type=\"button\" class=\"btn btn-xs btn-danger pull-right\" onclick=\"$(\'#attribute-row-' + window.count + '\').remove();\">Delete</button><hr/></div></div><input type="hidden" name="ProductAttributes.Index" value="' + window.count + '">';

        htmlString=htmlString.replace('ProductAttributes[0].AttributeId', 'ProductAttributes[' + window.count + '].AttributeId');
        htmlString = htmlString.replace('ProductAttributes[0].AttributeDescription', 'ProductAttributes[' + window.count + '].AttributeDescription');
        htmlString = htmlString.replace('ProductAttributes_0__AttributeId', 'ProductAttributes_'+window.count+'__AttributeId');
        htmlString = htmlString.replace('ProductAttributes_0__AttributeDescription', 'ProductAttributes_' + window.count +'__AttributeDescription');
        console.log(htmlString);
        setAttributeCountValue();
        attributeRow.append(htmlString);
    }
</script>


<!-- latest jquery-->
<script src="../assets/js/jquery-3.3.1.min.js"></script>
<!-- Container-fluid Ends-->
<script src="../assets/js/dashboard/form-validation-custom.js"></script>
<!-- ckeditor js-->
@*<script src="../assets/js/editor/ckeditor/ckeditor.js"></script>
<script src="../assets/js/editor/ckeditor/styles.js"></script>
<script src="../assets/js/editor/ckeditor/adapters/jquery.js"></script>
<script src="../assets/js/editor/ckeditor/ckeditor.custom.js"></script>*@

@*<script src="../assets/js/jquery.elevatezoom.js"></script>
<script src="../assets/js/zoom-scripts.js"></script>*@
